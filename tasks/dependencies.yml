---

- name: Execute the install_dependencies shell
  become: yes
  ansible.builtin.shell: /tmp/shell/install_dependencies.sh >> /tmp/jitsi_install_dependencies.txt

# - name: Install dependencies.
#   become: yes
#   ansible.builtin.package:
#     name: "{{ item }}"
#     state: present
#     update_cache: yes
#   with_items: "{{ jitsi_dependencies }}"

# - name: Execute the command in remote shell; stdout goes to the specified file on the remote
#   ansible.builtin.shell: somescript.sh >> somelog.txt

# - name: Enable universe repository
#   apt_repository:
#     repo: universe

# - name: Add specified repository into sources list using specified filename
#   ansible.builtin.apt_repository:
#     repo: deb https://download.jitsi.org stable/
#     state: present
#     filename: jitsi-stable
#   become: true

# - name: import the jitsi apt key
#   apt_key:
#     url: https://download.jitsi.org/jitsi-key.gpg.key
#     state: present
#   become: true

# - name: Run the equivalent of "apt-get update" as a separate step
#   ansible.builtin.apt:
#     update_cache: yes
#   become: true

# - name: Add specified repository into sources list using specified filename
#   ansible.builtin.apt_repository:
#     repo: deb http://packages.prosody.im/debian $(lsb_release -sc) main
#     state: present
#     filename: jitsi-stable
#   become: true

# - name: Install python packages
#   become: yes
#   ansible.builtin.pip:
#     name: "{{ item }}"
#   with_items: "{{ pip_dependencies }}"

...
